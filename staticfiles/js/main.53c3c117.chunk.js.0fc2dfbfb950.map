{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","strikeUnstrike","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","response","json","data","setState","e","target","value","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","task","tasks","self","className","onSubmit","onChange","type","placeholder","map","index","onClick","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.53c3c117.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id: null,\n        title: \"\",\n        completed: false,\n      },\n      editing: false,\n    };\n    this.fetchTasks = this.fetchTasks.bind(this);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.getCookie = this.getCookie.bind(this);\n\n    this.startEdit = this.startEdit.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.strikeUnstrike = this.strikeUnstrike.bind(this);\n  }\n\n  // CSRF - TOKEN\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== \"\") {\n      const cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  fetchTasks() {\n    console.log(\"Fetching ...\");\n    fetch(\"https://nafi-rdapp.herokuapp.com/api/task-list/\")\n      .then((response) => response.json())\n      .then((data) =>\n        this.setState({\n          todoList: data,\n        })\n      );\n  }\n\n  handleChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    console.log(\"onHandleChange ... Name :\", name);\n    console.log(\"onHandleChange ... Value :\", value);\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem,\n        title: value,\n      },\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"ITEM\", this.state.activeItem);\n    const csrftoken = this.getCookie(\"csrftoken\");\n    let url = \"https://nafi-rdapp.herokuapp.com/api/task-create/\";\n    if (this.state.editing === true) {\n      url = `https://nafi-rdapp.herokuapp.com/api/task-update/${this.state.activeItem.id}/`;\n      this.setState({\n        editing: false,\n      });\n    }\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n      body: JSON.stringify(this.state.activeItem),\n    })\n      .then((response) => {\n        this.fetchTasks();\n        this.setState({\n          activeItem: {\n            id: null,\n            title: \"\",\n            completed: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        console.log(\"ERROR...\", error);\n      });\n  }\n\n  startEdit(task) {\n    this.setState({\n      activeItem: task,\n      editing: true,\n    });\n  }\n\n  deleteItem(task) {\n    const csrftoken = this.getCookie(\"csrftoken\");\n    fetch(`https://nafi-rdapp.herokuapp.com/api/task-delete/${task.id}/`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n    }).then((response) => {\n      this.fetchTasks();\n    });\n  }\n\n  strikeUnstrike(task) {\n    task.completed = !task.completed;\n    console.log(\"TASK\", task.completed);\n    const csrftoken = this.getCookie(\"csrftoken\");\n    const url = `https://nafi-rdapp.herokuapp.com/api/task-update/${task.id}/`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n      body: JSON.stringify({ completed: task.completed, title: task.title }),\n    }).then((response) => {\n      this.fetchTasks();\n    });\n  }\n\n  render() {\n    let tasks = this.state.todoList;\n    let self = this;\n\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div className=\"title-content\">\n                  <input\n                    onChange={this.handleChange}\n                    id=\"title\"\n                    className=\"form-control\"\n                    type=\"text\"\n                    value={this.state.activeItem.title}\n                    name=\"title\"\n                    placeholder=\"Add task\"\n                  />\n                </div>\n                <div className=\"title-submit\">\n                  <input id=\"submit\" className=\"btn\" type=\"submit\" />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div id=\"list-wrapper\">\n            {tasks.map(function (task, index) {\n              return (\n                <div key={index} className=\"task-wrapper \">\n                  <div\n                    onClick={() => self.strikeUnstrike(task)}\n                    className=\"task-content\"\n                  >\n                    {task.completed === false ? (\n                      <span>{task.title}</span>\n                    ) : (\n                      <strike>{task.title}</strike>\n                    )}\n                  </div>\n\n                  <div className=\"task-btn\">\n                    <button\n                      onClick={() => self.startEdit(task)}\n                      className=\"btn  btn-edit\"\n                    >\n                      Edit\n                    </button>\n\n                    <button\n                      onClick={() => self.deleteItem(task)}\n                      className=\"btn btn-delete\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}